// Code generated by MockGen. DO NOT EDIT.
// Source: remote/temprepomgr/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTempRepoManager is a mock of TempRepoManager interface.
type MockTempRepoManager struct {
	ctrl     *gomock.Controller
	recorder *MockTempRepoManagerMockRecorder
}

// MockTempRepoManagerMockRecorder is the mock recorder for MockTempRepoManager.
type MockTempRepoManagerMockRecorder struct {
	mock *MockTempRepoManager
}

// NewMockTempRepoManager creates a new mock instance.
func NewMockTempRepoManager(ctrl *gomock.Controller) *MockTempRepoManager {
	mock := &MockTempRepoManager{ctrl: ctrl}
	mock.recorder = &MockTempRepoManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTempRepoManager) EXPECT() *MockTempRepoManagerMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockTempRepoManager) Add(path string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", path)
	ret0, _ := ret[0].(string)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockTempRepoManagerMockRecorder) Add(path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockTempRepoManager)(nil).Add), path)
}

// GetPath mocks base method.
func (m *MockTempRepoManager) GetPath(id string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPath", id)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPath indicates an expected call of GetPath.
func (mr *MockTempRepoManagerMockRecorder) GetPath(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPath", reflect.TypeOf((*MockTempRepoManager)(nil).GetPath), id)
}

// Remove mocks base method.
func (m *MockTempRepoManager) Remove(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockTempRepoManagerMockRecorder) Remove(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockTempRepoManager)(nil).Remove), id)
}
